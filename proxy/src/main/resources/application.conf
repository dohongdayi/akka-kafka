akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

  actor {
    provider = "akka.remote.RemoteActorRefProvider"

    default-mailbox = {
      mailbox-type = "io.github.junheng.akka.monitor.mailbox.MonitoredSafeMailbox"
      mailbox-capacity = 100000
    }
    default-dispatcher = {
      type = Dispatcher
      executor = "io.github.junheng.akka.monitor.dispatcher.MonitoredForkJoinExecutorServiceConfigurator"
      monitored-fork-join-executor {
        parallelism-min = 1024
        parallelism-factor = 8
        parallelism-max = 1024
        monitor-interval = 60000
      }
    }

    serializers {
      java = "com.romix.akka.serialization.kryo.KryoSerializer"
      kafka = "io.github.junheng.akka.kafka.protocol.ProtocolSerializer"
    }

    serialization-bindings {
      "io.github.junheng.akka.kafka.protocol.KafkaPayloadMessage": kafka
    }

    kryo {
      idstrategy = "default"
      buffer-size = 32768
      ost-serialization-transformations = "off"
      implicit-registration-logging = true
    }
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    log-buffer-size-exceeding = 10000
    netty.tcp {
      hostname = ${host}
      port = 0
      maximum-frame-size = 16m
    }
  }
}

safe-mailbox-monitor {
  report-interval = 15 seconds
  watched-actor-paths = []
}

accessor {
  host = ${host}
  port = 8010
}

kafka {
  zookeepers = "pkf01,pkf02,pkf03"
  brokers = "pkf01:9092,pkf02:9092,pkf03:9092,pkf04:9092"
  cache = 100
  topics = [
    {id: "hbase_event_post", groups: ["worm"], partition: 10, cache: 10000}
    {id: "hbase_event_profile", groups: ["worm"], partition: 10, cache: 10000}
    {id: "raw_weibo_edit", groups: ["collector"], partition: 6}
    {id: "raw_instagram_edit", groups: ["collector"], partition: 6}
    {id: "raw_instagram_vip", groups: ["collector"], partition: 6}
    {id: "raw_mobile", groups: ["collector"], partition: 6}
    {id: "raw_browser", groups: ["collector"], partition: 6}
    {id: "raw_weibo_high", groups: ["collector"], partition: 6}
    {id: "raw_weibo_low", groups: ["collector"], partition: 6}
    {id: "raw_weibo_friends", groups: ["collector"], partition: 6}
    {id: "raw_weibo_vip", groups: ["collector"], partition: 6}
    {id: "raw_instagram_gps_quick", groups: ["collector"], partition: 6}
    {id: "raw_instagram_high", groups: ["collector"], partition: 6}
    {id: "raw_instagram_low", groups: ["collector"], partition: 6}
    {id: "raw_pinterest_high", groups: ["collector"], partition: 6}
    {id: "raw_pinterest_low", groups: ["collector"], partition: 6}
    {id: "raw_twitter_high", groups: ["collector"], partition: 6}
    {id: "raw_twitter_low", groups: ["collector"], partition: 6}
    {id: "raw_twitter_vip", groups: ["collector"], partition: 6}
    {id: "raw_facebook_vip", groups: ["collector"], partition: 6}
    {id: "raw_other", groups: ["collector"], partition: 6}
    {id: "dp_overall_instagram_edit", groups: ["dp"], partition: 8, cache: 1000}
    {id: "dp_overall_instagram_vip", groups: ["dp"], partition: 8}
    {id: "dp_overall_weibo_vip", groups: ["dp"], partition: 8}
    {id: "dp_overall_weibo_edit", groups: ["dp"], partition: 8, cache: 1000}
    {id: "dp_overall_instagram_high", groups: ["dp"], partition: 8, cache: 1000}
    {id: "dp_overall_instagram_low", groups: ["dp"], partition: 8, cache: 1000}
    {id: "dp_overall_weibo_high", groups: ["dp"], partition: 8, cache: 1000}
    {id: "dp_overall_weibo_low", groups: ["dp", "dp_f"], partition: 8, cache: 1000}
    {id: "dp_overall_twitter_high", groups: ["dp"], partition: 8, cache: 1000}
    {id: "dp_overall_twitter_low", groups: ["dp"], partition: 8, cache: 1000}
    {id: "dp_overall_twitter_vip", groups: ["dp"], partition: 8}
    {id: "dp_overall_pinterest_high", groups: ["dp"], partition: 8, cache: 1000}
    {id: "dp_overall_pinterest_low", groups: ["dp"], partition: 8, cache: 1000}
    {id: "dp_overall_facebook_vip", groups: ["dp"], partition: 8}
    {id: "dp_overall_gps", groups: ["dp"], partition: 8, cache: 1000}
    {id: "cat_post_content", groups: ["oos_upload"], partition: 6}
    {id: "cat_post_image", groups: ["oos_upload"], partition: 6}
    {id: "cat_post_vipimage", groups: ["oos_upload"], partition: 6}
  ]
}

server-locator {
  zookeepers = "phb01,phb02,phb03"
  name = "dragon"
}
